name: Hello and Release

on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Say Hello
        run: echo "hello, world!"

      - name: Check if main.py exists
        run: |
          if [ ! -f main.py ]; then
            echo "❌ main.py does not exist!"
            exit 1
          else
            echo "✅ main.py exists."
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run main.py
        run: python main.py

      # --- NEW RELEASE STEP ---
      - name: Get next tag
        id: tag
        run: |
          # Fetch all tags
          git fetch --tags
          # Find latest tag (default to v0.0.0 if none)
          latest=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$latest" ]; then
            latest="v0.0.0"
          fi
          echo "Latest tag: $latest"
          # Increment patch version
          IFS='.' read -r major minor patch <<<"${latest#v}"
          patch=$((patch+1))
          new_tag="v$major.$minor.$patch"
          echo "New tag: $new_tag"
          echo "tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          body: |
            Automatic release generated by GitHub Actions.
          draft: false
          prerelease: false