name: Hello and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write   # needed for tagging / releases

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0   # <-- ensure tags are available

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Environment setup
        run: |
          python -m pip install --upgrade pip
          pip install numpy
          # If you later add requirements.txt, replace the above with:
          # pip install -r requirements.txt

      - name: Say Hello
        run: echo "hello, world!"

      - name: Check if main.py exists
        run: |
          if [ ! -f main.py ]; then
            echo "main.py does not exist!"
            exit 1
          else
            echo "main.py exists."
          fi

      - name: Run tests
        run: python failtest.py

      - name: Run main.py
        run: python main.py

      # --- version + release only on push to main ---
      - name: Get next tag
        id: tag
        if: github.event_name == 'push'
        run: |
          git fetch --tags
          latest=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$latest" ]; then
            latest="v0.0.0"
          fi
          IFS='.' read -r major minor patch <<<"${latest#v}"
          patch=$((patch+1))
          new_tag="v$major.$minor.$patch"
          echo "tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: github.event_name == 'push'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          body: Automatic release generated by GitHub Actions.
          draft: false
          prerelease: false